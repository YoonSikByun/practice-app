// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./mlapp.sqlite"
}

model User {
  id            String      @id
  name          String
  createdAt     DateTime    @default(now())
  projects      Project[]
  workspaces    Workspace[]
}

model Project {
  id            String     @id
  name          String
  creatorId     String
  creator       User        @relation(fields: [creatorId], references: [id])
  createdAt     DateTime    @default(now())
  workspaces    Workspace[]
}

model Workspace {
  id            String       @id
  name          String
  createdAt     DateTime     @default(now())
  updatedAt     DateTime?
  creatorId     String
  creator       User         @relation(fields: [creatorId], references: [id])
  projectId     String
  project       Project       @relation(fields: [projectId], references: [id])
  description   String?
  setting       String?
  desgin        String?
}

// model User {
//   id        Int       @id @default(autoincrement())
//   createdAt DateTime  @default(now())
//   email     String    @unique
//   name      String?
//   comments  Comment[]
//   posts     Post[]
// }

// model Post {
//   id        Int       @id @default(autoincrement())
//   createdAt DateTime  @default(now())
//   title     String
//   content   String?
//   published Boolean   @default(false)
//   authorId  Int
//   author    User      @relation(fields: [authorId], references: [id])
//   comments  Comment[]
//   tags      Tag[]     @relation("TagToPost")
// }

// model Comment {
//   id          Int      @id @default(autoincrement())
//   createdAt   DateTime @default(now())
//   comment     String
//   writtenById Int
//   postId      Int
//   writtenBy   User     @relation(fields: [writtenById], references: [id])
//   post        Post     @relation(fields: [postId], references: [id], onUpdate: NoAction)
// }

// model Tag {
//   id    Int    @id @default(autoincrement())
//   tag   String @unique
//   posts Post[] @relation("TagToPost")
// }
